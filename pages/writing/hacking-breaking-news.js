import WithPost from '../../helpers/with-post';

export default WithPost({
  title: 'Hacking Breaking News',
  date: 'December, 2013',
  html: `
  <p>Even though I'm no longer working for a <a href="http://www.mathisonian.com/portfolio/">news organization</a>, I can't help but continue to spend time thinking about how technology can be used both to build better tools for journalists and communities, and to disseminate information more efficiently.&nbsp;</p><p>While there seems to be some debate about whether or not technology is <a href="http://www.vice.com/read/the-vice-podcast-is-free-content-ruining-journalism">ruining</a> <a href="http://www.poynter.org/latest-news/mediawire/171802/is-twitter-ruining-journalism/">journalism</a>, something I've found is that <i><b>there tends to be a sweet spot where tech is combined with human curation and oversight</b></i>. This has the potential to result in something superior to either approach individually. (More modern uses of twitter, and the app <a href="http://cir.ca/">circa</a> are both going in the right direction here)</p><p>So, I set out to work on a project taking advantage of some of the already existing, curated content sources that are available for free to anybody with an internet connection.</p><h3>project</h3><div>For the project definition, I came up with two questions that I would try to answer:</div><div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div style=""><br/>Given a near real-time stream of breaking news headlines, can we algorithmically determine the physical location of the events as they happen, along with some key terms or players associated with the stories?</div><br/><div>If so, what how can that information be used?</div></blockquote><font color="#777777"><h4>automating breaking news</h4><div style="text-align: left;">To answer the first question I used the following strategy:</div><div style="text-align: left;"><br/><ol><li>Watch the <a href="https://twitter.com/BreakingNews">BreakingNews twitter account</a> for any updates</li><li>Use the <a href="http://www.alchemyapi.com/">AlchemyAPI</a> to process the tweets and extract entities.</li><li>If any of those entities are locations, use the <a href="https://developers.google.com/maps/documentation/geocoding/">google geoencoding API</a> to turn location entity names into latitude-longitude bounding boxes.</li></ol><i><img src="https://pbs.twimg.com/profile_images/378800000700003994/53d967d27656bd5941e7e1fcddf47e0b.png" style="float: left; margin: 0px 10px 10px 0px; width: 89px; height: 89px;" alt=""></i><i>This is a great example of the power of open API's. I am able to create all of that functionality in about 100 lines of javascript code by taking advantage of the hard work that others have made available for free.</i></div><h4><br></h4><h4>applying the results</h4><div style="text-align: left;">The second question is open-ended, but this was my first attempt:</div></font></div><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><div><font color="#777777"><div style="text-align: left;"><br/>We have a computer program that knows what the most 'important' story is right now, and where that thing is happening.</div><div style="text-align: left;"><br/>Given that, we can create something to get updates on the story that are:</div></font></div></blockquote><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><font color="#777777"><div style="text-align: left;"><br/><ol><li><span style="font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;">happening at the location of the event</span><br></li><li><span style="font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;">happening in real-time</span><br></li><li><span style="font-family: Arial, Helvetica, Verdana, Tahoma, sans-serif; font-size: 15px; line-height: 1.45em;">reported by a reputable source</span><br></li></ol></div></font></blockquote><br><div>To do this I turn once again to twitter. It is straightforward to use the results of the geoencoding api to cover points (1) &amp; (2). <br/><br/>Figuring out (3), which tweets are reliable or not, is the more difficult (and ill defined), especially since the decisions have to be made in realtime as the twitter stream continually provides more and more tweets.</div><div><br/>I don't claim to have solved (3), but my attempt was that a twitter user is considered to be reputable if they meet any of the following criteria:</div><div><br/><blockquote style="margin: 0 0 0 40px; border: none; padding: 0px;"><ol><li>Are associated with a news organization in their bio</li><li>Have certain keywords in their bio</li><li>Have over N followers</li></ol></blockquote></div><div>Hopefully it provides some rough estimate of reliability.</div><br/><div>To check for an association with a news organization, I keep <a href="https://github.com/mathisonian/onsite/blob/master/sources.js">a big list of news orgs' twitter accounts</a> to check against (and anybody can submit a pull request to add a new one!).&nbsp;</div><br/><div>The keywords that I use were just determined by trial-and-error, and are in no way scientific, but they do seem to improve results.</div><br/><div><a href="https://github-camo.global.ssl.fastly.net/48c959b7534ec944ddc5af628f2b81aac2e19c2c/687474703a2f2f692e696d6775722e636f6d2f66534e556e5a4d2e706e67"><img src="https://github-camo.global.ssl.fastly.net/48c959b7534ec944ddc5af628f2b81aac2e19c2c/687474703a2f2f692e696d6775722e636f6d2f66534e556e5a4d2e706e67" style="float: none; margin: 0px;" alt=""></a><i>Old interface streaming reporter on-site of kenya mall shootings</i><br></div><h3>results</h3><div>The results of all this is a working working website that can <i>with no oversight on my part </i>keep up to date on important news happening around the world, and also provide realtime context and updates from people tweeting at the site of the event.</div><br/><div>I call the project <i><b>Onsite</b></i></div><br/><div><a href="http://i.imgur.com/bwMhkdX.png"><img src="http://i.imgur.com/bwMhkdX.png" style="float: none; margin: 0px;" alt=""></a><i>Current interface showing people celebrating sporting event</i></div><br/><div>I've <a href="https://github.com/mathisonian/onsite">open-sourced all of the code</a>, and there is a <a href="http://onsite.mathisonian.com/">rough demo available online</a>.&nbsp;</div><div><br>Not surprisingly, the site is most effective when there is a large new story breaking, and is relatively unassuming otherwise. The two images  of the program in action (a sporting event, and the Kenya mall attack) display this to some extent<br/><br/>There is plenty of possible future work with stuff like this, including possibly making an API to provide others with realtime and meta-tagged breaking news stories. What else would you do with it? </div>
  <br/>
  <div><i>I'm on twitter. <a href="http://twitter.com/mathisonian">@mathisonian</a></i></div>
  <br/>
`
});
