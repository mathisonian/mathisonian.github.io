webpackHotUpdate(6,{

/***/ 672:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(__resourceQuery) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign = __webpack_require__(76);

var _assign2 = _interopRequireDefault(_assign);

var _withPost = __webpack_require__(673);

var _withPost2 = _interopRequireDefault(_withPost);

var _apparatus = __webpack_require__(703);

var _apparatus2 = _interopRequireDefault(_apparatus);

var _easer = __webpack_require__(706);

var _easer2 = _interopRequireDefault(_easer);

var _center = __webpack_require__(710);

var _center2 = _interopRequireDefault(_center);

var _idyllComponents = __webpack_require__(711);

var Components = _interopRequireWildcard(_idyllComponents);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _withPost2.default)({
  title: 'Using Apparatus with Idyll',
  date: 'December, 2017',
  idyll: {
    components: (0, _assign2.default)({}, Components, {
      apparatus: _apparatus2.default,
      center: _center2.default,
      easer: _easer2.default
    }),
    markup: '\n\n      [Apparatus](http://aprt.us/) is a hybrid graphics editor and programming environment for creating interactive diagrams. They offer an [online editor](http://aprt.us/) that allows authors to use a direct-manipulation\n      style interface to create paramaterized interactive widgets. This video offers a quick overview:\n\n      [iframe src:"https://player.vimeo.com/video/140304675" width:420 height:263 frameborder:0 webkitallowfullscreen:true mozallowfullscreen:true allowfullscreen:true /]\n\n      In this post\n      I\'ll show how Apparatus graphics can be embedded in Idyll documents, and how a two way binding between Idyll variables\n      and Apparatus attributes can be created.\n\n      ## Embedding\n\n      First, we need an Apparatus figure. I\'ll use an [existing example](http://aprt.us/editor/viewer-test/javascript.html) for the purposes of this walkthrough. It displays a visual technique for thinking about summations of consecutive odd numbers starting with one: they always add to a perfect square!\n      Drag the handle in this graphic to see:\n\n      [var name:"_n" value:0 /]\n      [var name:"roi" value:` { x: [-1.5, 7.5], y: [-1.5, 7.5 ] } ` /]\n\n      [Apparatus\n        _url: "https://cdn.rawgit.com/mathisonian/3ad1fbf668086b5e4c742abfebbff541/raw/4a443db3db931c459b563bdea5323df75947d4ea/sum-of-odds.json"\n        _regionOfInterest: roi\n        _width: 300\n        _height: 300\n        N:_n  /]\n\n      The graphic provides a geometric intuition for why this mathematical statement would hold true. The next odd number always completes the next outer "layer" of the square.\n      Internally, this Apparatus figure keeps track of a single state variable, `N`, that determines how things are rendered on your screen. Currently `N` is [Display var:_n format:"d" /].\n\n      I\'ve created a new Apparatus component that makes it easy to embed these graphics\n      in your Idyll documents. Here\'s the code to embed that interactive graphic:\n\n      ```md\n[Apparatus\n  _url: "path/to/sum-of-odds.json"\n  _regionOfInterest: roi\n  _width: 300\n  _height: 300 /]\n      ```\n\n      The `_regionOfInterest` parameter tells Apparatus where to focus, and can be passed in like `{ x: [-1, 1], y: [-1, 1] }`.\n      The parameters starting with an underscore are used to configure Apparatus; other parameters will configure the graphic itself (you\'ll see more below).\n\n      ## Communicating with the document\n\n      The above code is nice in that it makes things easy to embed, but it doesn\'t really *do* a whole lot.\n      Idyll\'s reactive variable system is a natural match for the architecture that Apparatus uses, and this new\n      component makes it easy to create two way bindings between Idyll variables and Apparatus attributes.\n\n      For example, I can create an Idyll variable, and connect it to the `N` attribute:\n\n      [var name:"N" value:0 /]\n\n      [center]\n      **Move slider to update Idyll variable.**\n      [br/]\n      [Range value:N min:0 max:10 /]\n      [br/]\n      [Display var:N /]\n      [br/]\n\n      [br/]\n      **Drag on the square below and notice the slider move.**\n      [/center]\n\n      [Apparatus\n        _url: "https://cdn.rawgit.com/mathisonian/3ad1fbf668086b5e4c742abfebbff541/raw/4a443db3db931c459b563bdea5323df75947d4ea/sum-of-odds.json"\n        _regionOfInterest: roi\n        _width: 300\n        _height: 300\n        N:N /]\n\n\n      Updating works in both directions! Here\'s the code to make this work:\n\n      ```md\n[var name:"IdyllN" value:0 /]\n\n**Move slider to update Idyll variable:**\n[Range value:IdyllN min:0 max:10 /]\n[Display var:IdyllN /]\n\n**Drag on the square below and notice the slider move.**\n[Apparatus\n  _url: "path/to/sum-of-odds.json"\n  _regionOfInterest: roi\n  _width: 300\n  _height: 300\n  N:IdyllN /]\n      ```\n\n      This code creates a variable in Idyll, called `IdyllN` and binds it to the `N` attribute from\n      apparatus. If you interact with the Apparatus figure and change the size of the square, this change gets propagated back\n      to Idyll. Similarly, taking an action that would modify the Idyll variable, for example moving a slider, will also\n      cause the Apparatus figure to get updated.\n\n\n    ## For fun\n\n\n    [var name:"growth" value:0 /]\n    [var name:"roi2" value:`{ x: [-5, 5], y: [-8, 8] }` /]\n\n    Here\'s another example, modified from Bret Victor\'s figure on the Apparatus example gallery.\n    It\'s a fully interactive Apparatus figure; click and drag the sun to change the time of\n    day and growth of the plant.\n\n\n    [display var:x /]\n\n    [Apparatus\n      _url: "https://cdn.rawgit.com/mathisonian/d0946ec277daa876bf2157483123c479/raw/eb82e9ef390c214c86504d1d76c666ce8f763a3a/potted%2520plant%2520(1).json"\n      _regionOfInterest: roi2\n      _width: "100%"\n      _height: 400\n      growth:growth /]\n\n\n    By parameterizing the figure with Idyll variables, we can quickly turn this into an\n    animated graphic:\n\n    [center style:`{marginBottom: 60}`]\n    [easer value:growth targetValue:17 ] Make it day [/easer]\n\n    [easer value:growth targetValue:-1.5 ] Make it night [/easer]\n    [/center]\n\n    The component is open source and available at [https://github.com/idyll-lang/idyll-apparatus-component](https://github.com/idyll-lang/idyll-apparatus-component).\n\n    Learn more about the two projects:\n\n[br/]\n    [b]\n      [a href:"https://idyll-lang.org" text:"https://idyll-lang.org" /]\n    [/b]\n    [br/][br/]\n\n  [b]\n    [a href:"http://aprt.us/" text:"http://aprt.us" /]\n  [/b]\n[br/][br/]\n\n  [small][i][a href:"https://github.com/mathisonian/mathisonian.github.io/blob/master/pages/writing/apparatus.js"]See the source for this post[/a][/i].[/small]\n    '
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VzL3dyaXRpbmcvYXBwYXJhdHVzLmpzIl0sIm5hbWVzIjpbIldpdGhQb3N0IiwiQXBwYXJ0dXMiLCJFYXNlciIsIkNlbnRlciIsIkNvbXBvbmVudHMiLCJ0aXRsZSIsImRhdGUiLCJpZHlsbCIsImNvbXBvbmVudHMiLCJhcHBhcmF0dXMiLCJjZW50ZXIiLCJlYXNlciIsIm1hcmt1cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLEFBQU8sQUFBYzs7OztBQUNyQixBQUFPLEFBQWM7Ozs7QUFDckIsQUFBTyxBQUFXOzs7O0FBQ2xCLEFBQU8sQUFBWTs7OztBQUNuQixBQUFPOztJQUFQLEFBQVksQUFFWjs7Ozs7OztTQUF3QixBQUNmLEFBQ1A7UUFGc0IsQUFFaEIsQUFDTjs7c0NBQ2MsQUFBYyxJQUFkLEFBQWtCO0FBQVksQUFDN0IsQUFDWDtBQUZ3QyxBQUVoQyxBQUNSO0FBSkcsQUFDTyxBQUE4QixBQUdqQyxBQUVUO0FBTDBDLEFBQ3hDLEtBRFU7WUFKaEIsQUFBZSxBQUFTLEFBR2Y7QUFBQSxBQUNMO0FBSm9CLEFBQ3RCLENBRGEiLCJmaWxlIjoiYXBwYXJhdHVzLmpzP2VudHJ5Iiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tYXRoaXNvbmlhbi9wcm9qZWN0cy9tYXRoaXNvbmlhbi5naXRodWIuaW8ifQ==

 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } /* eslint-disable camelcase, no-undef */ var webpackExports = typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__ : module.exports; /* eslint-enable camelcase, no-undef */ if (typeof webpackExports === 'function') { __REACT_HOT_LOADER__.register(webpackExports, 'module.exports', "/Users/mathisonian/projects/mathisonian.github.io/pages/writing/apparatus.js"); return; } /* eslint-disable no-restricted-syntax */ for (var key in webpackExports) { /* eslint-enable no-restricted-syntax */ if (!Object.prototype.hasOwnProperty.call(webpackExports, key)) { continue; } var namedExport = void 0; try { namedExport = webpackExports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/mathisonian/projects/mathisonian.github.io/pages/writing/apparatus.js"); } } })();
    (function (Component, route) {
      if (false) return
      if (false) return

      var qs = __webpack_require__(84)
      var params = qs.parse(__resourceQuery.slice(1))
      if (params.entry == null) return

      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/writing/apparatus")
  
/* WEBPACK VAR INJECTION */}.call(exports, "?entry"))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,